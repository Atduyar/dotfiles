v .zshrc
nvim .zshr
nvim .zshrc
cd .dotfiles
stow zsh
ls
ll
la
exit
git status
git status --help
git commit
git status
git commit
v .config/zsh/.zshrc
exit
v .config/zsh/.zshrc
v .config/zsh/.zshrc
source .config/zsh/.zshrc
v .config/zsh/.zshrc
exit
exit
v .config/zsh/.zshrc
exit
v .config/zsh/.zshrc
zstyle -t ':example:foo' doit && echo "success" || echo "fail"
v .config/zsh/.zshrc
cd .dotfiles\ 
cd .dotfiles
v ~/.config/zsh/.zshrc
source .config/zsh/.zshrc
source ~/.config/zsh/.zshrc
cd 
v ~/.config/zsh/.zshrc
exit
cd .dotfiles
v ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
cd ..
source ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
ls
v ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
ls
sudo su
uptime
fastfetch
exit
fg
exit
v ~/.config/zsh/.zshrc
exit
v ~/.config/zsh/.zshrc
exit
v ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
exit
v ~/.dotfiles/alacritty
ls
ll
l
fc-query
fc-query -b
fc-query -l
fc-list
fc-list | grep jet
fc-list | grep nerd
fc-list | grep jet
fc-list
ls Downloads
ls Downloads/JetBrainsMono
rmdir Downloads/JetBrainsMono
ls Downloads
cd Downloads
ls
unzip JetBrainsMono.zip
ls
unzip JetBrainsMono.zip --help
man unzip JetBrainsMono.zip --hel
man unzip JetBrainsMono.zip -d JetBrains
unzip JetBrainsMono.zip -d JetBrains
ls
rm ./*/ttf
rm  ./*/ttf
rm  ./*.ttf
ls
rm OFL.txt README.md
cd JetBrains
ls
ls ~/.local/share/fonts
ls ~/.local/share/fonts
fc-cache -f -v
v .config/zsh/.zshrc
v .config/zsh/.zshrc
cd
v .config/zsh/.zshrc
fc-cache -f -v | v
v .config/zsh/.zshrc
fc-cache -f -v 
exit
fc-cache -f -v 
fc-cache -f -v | v
v .zshenv
reboot
cd~/.config/nvim/lua/plugins
ls
cd ~/.config/nvim/lua/plugins
ls
ll
ls ..
v 
exit
ls
exit
exit
ls .config
la .config
ls -la .config
ls
ll
v .
ls
v repos/Evrenomi-frontend
v
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
v repos/Evrenomi-frontend/src/pages/index.astro 
sudo dnf install tlp tlp-rdw
tlp
sudo systemctl enable tlp.service
v ~/.config/zsh/.zshrc
bindkey "^[[1;5C" emacs-forward-word\
bindkey "^[[1;5D" backward-word\

v ~/.config/zsh/.zshrc
exit
tlc
reboot
tlc
tlp
tlp-stat
tlp-stat
sudo tlp-stat
sudo tlp-stat -s
asusctl
supergfx -
supergfx -s
supergfxctl
supergfxctl -g
supergfxctl -s
exit
v ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
test
tests
supergf
echo PATH
echo $PATH
v ~/.config/zsh/.zshrc
echo $PATH
fg
ls
ll
l
fg
v ~/.config/zsh/.zshrc
exit
echo $PATH
exit
echo $PATH
v ~/.config/zsh/.zshrc
ff
ls
ls
ll
la
ll
which ll
where ll
ls
ll
ls
echo $SHELL
ll
ll -a
v .
echo $PATH
v ~/.config/zsh/.zshrc
[ -d "$HOME/.local/bin" ];
echo $?
ls .local/bi
mkdir .local/bi
mkdir .local/bin
rmdir.local/bi
rmdir .local/bi
[ -d "$HOME/.local/bin" ];
echo $?
v ~/.config/zsh/.zshrc
ls
bg
fg
fg
ls
ls /etc/zshenv
v /etc/zshenv
v /etc/zshrc
bindkey -v
exit
fg
echo $PATH
exit
v .config/zsh/.zshrc
v .zshenv
v .zshenv
echo $PATH
ls -ld /bin /sbin
zsh --help
bash
echo $PATH
v .zshenv
export PATH=$HOME/.local/bin:$PATH\

echo $PATH
v .zshenv
exit
fg
exit
fg
exit
echo $TTTT
echo $TTTTT
echo $TTTT
echo $EDITOR
exit
echo $PATH
source .zshenv
echo $PATH
v .zshenv
echo $ZDOTDIR
v .zshenv
echo $HISTFILE
cat /etc/passwd | grep atduyar
zsh -x -i -c exit 2>&1 | grep zshenv
zsh -x -i -c exit 2>&1 
ls -l ~/.zshenv\
ls -l ~/.dotfiles/zsh/.zshenv
v .zshenv
v .zshenv
env | grep ZDOTDIR
bg
fg
grep zshenv /etc/zshenv
v .zshenv
ll
ls
ls -la ~ | grep zsh
v .zshenv
echo $https://t3.chat/chat/5efa090c-2914-4693-901a-1c97f94938de
ll .config/zsh
ll .config/zsh/
ll -a .config/zsh/
ll -a .config/zsh/.zshrc
v .config/zsh/.zshrc
v .config/zsh/.zshrc
ls .dotfiles/zsh/.config
ls -a .dotfiles/zsh/.config/zsh
ls -a .dotfiles/zsh/.config/zsh/.zshrc
v .dotfiles/zsh/.config/zsh/.zshrc
ll
ll -a
ll -a .config/zsh
ll -a .config/zsh/
ls -a
ll -a
echo $SHELL
echo $0
ls
rm ok.md
ls
rm ok.md
v .dotfiles/zsh/.config/zsh/.zshrc
cd .dotfiles
stow zsh
cd ..
ls
ll
ll
l
la
ll -a
ll -a .config/zsh/
fg
v .
echo $PATH
ls
rm ok.md
v .dotfiles/zsh/.config/zsh/.zshrc
zsh -x -i -c exit 2>&1 
l.
l
ll
l
v ~/.config/zsh/.zshenv
v ~/.config/zsh/.zshenv
l
exit
l
ll
ls
v .zshenv
v .zshenv
v .zshenv
sd
ff
sudo dnf update
sudo dnf help
sudo dnf --help
sudo dnf upgrade
exit
. .venv/bin/activate
uv run main.py
uv run main.py
uv run main.py
python3
. .venv/bin/activate
uv run main.py
uv run main.py
uv run main.py
uv run main.py
uv run main.py
exit
uv run main.py
exit
cd repos
git clone https://github.com/ORAO-AVIATION-IUS/Vtol-Panel
cd Vtol-Panel
pip install uv
sudo dnf install python 
sudo dnf install pip
pip install uv
uv 
uv run
uv venv
ls
l
uv 
uv source .venv/bin/activate
source .venv/bin/activate
ls
uv add -r requirements.txt
uv init
uv add -r requirements.txt
v requirements.txt
v requirements.txt
v requirements.txt
uv add -r requirements.txt
uv install PySide6-WebEngine
uv pip install PySide6-WebEngine
v .
uv add -r requirements.txt
vv .
bb
which command_not_found_handler
whence -f command_not_found_handler
type command_not_found_handler
v .
uv run Panel.py
uv run Panel.py
ls
ll
v .
uv run Panel.py
ll
fg
v .
v .
v .
v .
v .
cd ..
mkdir tmp
git clone https://github.com/ORAO-AVIATION-IUS/Vtol-Panel
cd tmp
git clone https://github.com/ORAO-AVIATION-IUS/Vtol-Panel
git switch
git branch
v .
l
exit
uv run main.py
uv run navlink_server.py
exit
cd repos/
cd tmp/Vtol-Panel
git branch
v .
l
git status
v .
cd ..
cd ..
rm -rf tmp
cd Evrenomi-frontend
..
cd Vtol-Panel
v .
cd ..
cd Vtol-Panel
v .
exit
uv install opencv-contrib-python
uv pip install opencv-contrib-python
exit
cd repos/Vtol-Panel
v .
uv run main.py
ls
ll
l
ll
v *.py
v *.py
. .venv/bin/activate
v *.py
uv
uv pip 
uv pip list
uv pip uninstall opencv-contrib-python
uv pip add opencv-contrib-python
uv  add opencv-contrib-python
v *.py
uv remove opencv-contrib-python
fg
exit
cd repos/Vtol-Panel
. .venv/bin/activate
uv run main.py
exit
cd repos/Vtol-Panel
v .
v .
v .
v .
v .
v .
v .
v .
fd
fg
v .
sudo dnf install fd-find
fd
v .
v .
v .
git status
uv add opencv-contrib-python
uv run main.py
v .
uv run main.py
exit
uv run main.py
uv run main.py
uv run main.py
fg
bg
kill +1
kill %1
fg
uv run main.py
uv run main.py
uv run main.py
uv run main.py
fg
cd repos/Vtol-Panel
v .
v .
v .
v .
fg
exit
v .
cd repos/Vtol-Panel
v .
v .
ping 1.1.1.1
gsettings set org.gnome.shell.window-switcher current-workspace-only false\

ls
cd ..
ls
autoload -Uz compinit && compinit
v ~/.config/zsh/.zshrc
v ~/.config/zsh/.zshrc
reset
cd ..
cd ~/.config/zsh/plugins
git clone https://github.com/zsh-users/zsh-completions.git
cd ..
l
rm .zcompdump
v .zshrc
cd ~/.config/zsh/plugins
cd ..
ls
rm .zcompdump
echo $fpath
ls /home/atduyar/.config/zsh/zsh-completions/src
v .zshrc
cd ~/.config/zsh/plugins
v .
rm .zcompdump
exit
rm .zcompdump
cd ~/.config/zsh/
rm .zcompdump
exit
echo $fpath
ls /home/atduyar/.config/zsh/plugins/zsh-completions/src
v /home/atduyar/.config/zsh/plugins/zsh-completions/src
compinit
v ~/.config/zsh/.zshrc
ls
l
l .zen
bindkey '^I' menu-select\
bindkey "$terminfo[kcbt]" menu-select
reset
_zs_ls_colors+='ma=38;5;21;48;5;18;1'\
zstyle ":completion:*$zs" list-colors $_zs_ls_colors
_zs_ls_colors+='ma=38;5;21;48;5;18;1'\
zstyle ":completion:*$zs" list-colors $_zs_ls_colors
exit
if ! zstyle -a ":completion:*$zs" list-colors _zs_ls_colors >/dev/null 2>&1; then\
  _zs_ls_colors=()\
fi\
# Override the match (ma) color to be more subtle (fg lighter white, bg darkest\
# gray, bold):\
_zs_ls_colors+='ma=38;5;21;48;5;18;1'\
zstyle ":completion:*$zs" list-colors $_zs_ls_colors\
unset _zs_ls_colors
zstyle ":completion:*:default" list-colors ${(s.:.)LS_COLORS} "ma=48;5;153;1"
v ~/.config/zsh/.zshrc
sudo su
cd Downloads
ls
ls
v .
ls
rm pacs.008.001.08\ \(2\).xsd head.001.001.02.xsd Pacs008_Ornek_20250724000029318.xml
exit
v tmp
ls
l
exit
xmlVal Downloads/Pacs008_Ornek_20250724000029318.xml
cd repos
ls
cargoo
cargo
curl https://sh.rustup.rs -sSf | sh
v .config/zsh/.zshrc
v ~/.config/zsh/.zshrc
exit
echo $PATH
cd repos
ls
cargo 
cargo init test-rust
cd test-rust
ls
v .
v .
v .
v --version
v .
v .
v .
v .
v .
exit
